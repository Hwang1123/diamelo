<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.diamelo.mappers.ProductMapper">

    <resultMap id="ProductResultMap" type="Product">
        <result column="PRO_NO" property="proNo"/>
        <result column="PROCATEGORY_NO" property="proCategoryNo"/>
        <result column="PRO_NAME" property="proName"/>
        <result column="PRO_DETAIL" property="proDetail"/>
        <result column="PRO_PRICE" property="proPrice"/>
        <result column="PRO_DELETED" property="proDeleted"/>
        <result column="IS_PRODUCT" property="isProduct"/>
        <result column="CHANGE_NAME" property="changeName"/>
    </resultMap>

    <resultMap id="ProductWithAmountResultMap" type="Product">
        <result column="PRO_NO" property="proNo"/>
        <result column="PRO_NAME" property="proName"/>
        <result column="AMOUNT" property="amount"/>
    </resultMap>

    <resultMap id="ProductWithStockResultMap" type="Product">
        <result column="PRO_NO" property="proNo"/>
        <result column="PRO_INVENT_STOCK" property="proInventStock"/>
        <result column="PRO_NAME" property="proName"/>
    </resultMap>

    <resultMap id="CartResultMap" type="Cart">
        <result column="PRO_NO" property="proNo"/>
        <result column="USER_ID" property="userId"/>
        <result column="PRO_STOCK" property="proStock"/>
    </resultMap>

    <!-- erpPage 제품 목록 조회 -->
    <select id="getProductList" resultMap="ProductResultMap">
        SELECT PRO_NO, PROCATEGORY_NO, PRO_NAME, PRO_DETAIL, PRO_PRICE, PRO_DELETED, IS_PRODUCT
        FROM PRODUCT
        WHERE PRO_DELETED = 'N' AND IS_PRODUCT ='Y'
    </select>

    <!-- crmPage 제품 목록 조회 -->
    <select id="getCrmProductList" resultMap="ProductResultMap">
        SELECT pro_no,
            procategory_no,
            pro_name,
            pro_detail,
            pro_price,
            pro_deleted,
            is_product,
            CHANGE_NAME
        FROM product
        JOIN ATTACHMENT USING(PRO_NO)
        WHERE pro_deleted = 'N' AND IS_PRODUCT ='Y'
    </select>

    <!-- 제품 이미지 조회 -->
    <select id="getProductImage" resultType="string">
        SELECT CHANGE_NAME FROM ATTACHMENT WHERE PRO_NO = #{productNo}
    </select>

    <!-- 특정 제품의 재료 목록 조회 -->
    <select id="getMaterialsByProductNo" resultMap="ProductWithAmountResultMap">
        SELECT
        m.PRO_NO AS PRO_NO,
        m.PRO_NAME AS PRO_NAME,
        r.AMOUNT AS AMOUNT
        FROM RECIPE r
        JOIN PRODUCT m ON r.MAT_NO = m.PRO_NO
        WHERE r.PRO_NO = #{productNo}
    </select>

    <!-- 재료 재고 조회 -->
    <!-- 생산할때 필요한 재료들의 번호와 그 재료들의 남은 수량이 조회됨 -->
    <select id="getMaterialStock" resultMap="ProductWithStockResultMap">
        SELECT PI.PRO_NO, PI.PRO_INVENT_STOCK
        FROM PRODUCT_INVENTORY PI
        JOIN PRODUCT P ON PI.PRO_NO = P.PRO_NO
        WHERE PI.PRO_NO IN (
        SELECT R.MAT_NO FROM RECIPE R WHERE R.PRO_NO = #{productNo}
        )
    </select>

    <!-- 제품 재고 증가 -->
    <!-- 입력한 생산량 만큼 제품 재고테이블에서 재고량이 증가됨   -->
    <update id="increaseProductStock" parameterType="map">
        UPDATE PRODUCT_INVENTORY
        SET PRO_INVENT_STOCK = PRO_INVENT_STOCK + #{quantity}
        WHERE PRO_NO = #{productNo}
    </update>

    <!-- 재료 재고 차감 -->
    <!-- 제품번호로 그에 맞는 레시피를 통한 재료정보에 있는 생산 요구량을 제품재고테이블에서 감소시킴   -->
    <update id="decreaseMaterialStock" parameterType="map">
        UPDATE PRODUCT_INVENTORY PI
        SET PI.PRO_INVENT_STOCK = PI.PRO_INVENT_STOCK - (
        SELECT SUM(R.AMOUNT) * #{quantity}
        FROM RECIPE R
        WHERE R.PRO_NO = #{productNo} AND R.MAT_NO = PI.PRO_NO
        )
        WHERE EXISTS (
        SELECT 1 FROM RECIPE R WHERE R.PRO_NO = #{productNo} AND R.MAT_NO = PI.PRO_NO
        )
    </update>

    <!--  제품 최대 몇개 제작가능인지  -->
    <select id="getMaxProductionCount" parameterType="int" resultType="int">
        SELECT MIN(FLOOR(PI.PRO_INVENT_STOCK / R.AMOUNT)) AS maxCount
        FROM RECIPE R
        JOIN PRODUCT_INVENTORY PI ON R.MAT_NO = PI.PRO_NO
        WHERE R.PRO_NO = #{productNo}
    </select>


    <!-- 제품 개수 조회 -->
    <select id="selectProductCount" resultType="_int">
        SELECT COUNT(*)
        FROM PRODUCT
        WHERE IS_PRODUCT = 'Y'
        AND PRO_DELETED = 'N'
    </select>

    <!-- 검색된 제품 개수 조회 -->
    <select id="selectSearchProductCount" resultType="_int">
        SELECT COUNT(*)
        FROM PRODUCT
        WHERE IS_PRODUCT = 'Y'
        AND PRO_DELETED = 'N'
        AND PRO_NAME LIKE '%${keyword}%'
    </select>

    <!-- crmPage 검색된 제품 목록 조회 -->
    <select id="getSearchCrmProductList" resultMap="ProductResultMap">
        SELECT pro_no,
               procategory_no,
               pro_name,
               pro_detail,
               pro_price,
               pro_deleted,
               is_product,
               CHANGE_NAME
               FROM product
        JOIN ATTACHMENT USING(PRO_NO)
        WHERE pro_deleted = 'N'
        AND IS_PRODUCT ='Y'
        AND PRO_NAME LIKE '%${keyword}%'
    </select>

    <!-- 장바구니 목록 조회 -->
    <select id="getCartList" resultMap="CartResultMap">
        SELECT *
        FROM CART
        WHERE USER_ID = #{userId}
    </select>

    <!-- 장바구니 추가 -->
    <!-- 장바구니 CRAT_NO 추가해야 함 -->
    <insert id="addCart">
        INSERT
        INTO CART(
                CART_NO,
                PRO_NO,
                USER_ID,
                PRO_STOCK
        ) VALUES(
                SEQ_CTNO.NEXTVAL,
                #{proNo},
                #{userId},
                1
        )
    </insert>

    <!-- 장바구니 삭제 -->
    <delete id="deleteCart">
        DELETE FROM CART
        WHERE USER_ID = #{userId}
        AND PRO_NO = #{proNo}
    </delete>

    <!-- 제품 입출고 정보 묶음 추가 -->
    <insert id="insertInoutGroup">
        INSERT
            INTO INOUT_GROUP(
            GROUP_NO,
            USER_ID,
            GROUP_TYPE,
            GROUP_DATE,
            GROUP_STATUS
        ) VALUES(
            SEQ_GNO.NEXTVAL,
            #{userId},
            'I',
            SYSDATE,
            'W'
        )
    </insert>

    <!-- 제품 입출고 내역 추가 -->
    <insert id="insertInoutHistory">
        INSERT
        INTO INOUT_HISTORY(
            HISTORY_NO,
            PRO_NO,
            GROUP_NO,
            HISTORY_STOCK,
            HISTORY_PRICE
        ) VALUES(
            SEQ_HNO.NEXTVAL,
            #{proNo},
            SEQ_GNO.CURRVAL,
            #{proStock},
            #{totalPrice}
        )
    </insert>

    <!-- 장바구니의 해당 재품 개수 조회 -->
    <select id="getProductStock" resultType="_int">
        SELECT PRO_INVENT_STOCK
        FROM PRODUCT_INVENTORY
        WHERE PRO_NO = #{proNo}
    </select>
</mapper>